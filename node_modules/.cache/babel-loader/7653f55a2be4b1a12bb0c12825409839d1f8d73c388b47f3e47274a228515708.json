{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./Tooth.css\";import\"./Patients.css\";// Lista categoriilor\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const treatments=[\"Implant\",\"Prosthetic restoration\",\"Obturation\",\"Endodontic treatment\",\"Apical surgery\",\"Orthodontic device\",\"Surgical device\"];const Tooth=_ref=>{let{tooth}=_ref;const[toothName,setName]=useState(\"\");const[diseases,setDiseases]=useState([]);const[toothTreatments,setTreatments]=useState([]);// const [notes, setNotes] = useState(\"\");\nuseEffect(()=>{if(tooth){setName(tooth.name);const issues=tooth.issues||[];const foundDiseases=issues.filter(issue=>!treatments.includes(issue.name));const foundTreatments=issues.filter(issue=>treatments.includes(issue.name));setDiseases(foundDiseases);setTreatments(foundTreatments);//setNotes(tooth.notes || \"Nicio notă suplimentară\");\n}},[tooth]);return/*#__PURE__*/_jsxs(\"form\",{className:\"patient-form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tooth Info\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input-bar\",type:\"text\",value:toothName,onChange:e=>setName(e.target.value),placeholder:\"Tooth Name\",required:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"tooth-info\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Issues:\"})}),diseases.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"issues-list\",children:diseases.map((disease,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"issue-item\",children:disease.name},index))}):/*#__PURE__*/_jsx(\"p\",{className:\"no-issues\",children:\"No disease identified\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Treatments:\"})}),toothTreatments.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"issues-list\",children:toothTreatments.map((treatment,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"tratament-item\",children:treatment.name},index))}):/*#__PURE__*/_jsx(\"p\",{className:\"no-issues\",children:\"No treatment identified\"})]})]});};export default Tooth;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","treatments","Tooth","_ref","tooth","toothName","setName","diseases","setDiseases","toothTreatments","setTreatments","name","issues","foundDiseases","filter","issue","includes","foundTreatments","className","children","type","value","onChange","e","target","placeholder","required","length","map","disease","index","treatment"],"sources":["C:/Users/40753/source/Facultate/Semestrul_5/ProiectareaProdInovative/DentalIQ_frontend/src/components/patient/Tooth.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Tooth.css\";\r\nimport \"./Patients.css\"\r\n\r\n\r\n// Lista categoriilor\r\nconst treatments = [\r\n    \"Implant\",\r\n    \"Prosthetic restoration\",\r\n    \"Obturation\",\r\n    \"Endodontic treatment\",\r\n    \"Apical surgery\",\r\n    \"Orthodontic device\",\r\n    \"Surgical device\",\r\n];\r\n\r\nconst Tooth = ({ tooth }) => {\r\n    const [toothName, setName] = useState(\"\");\r\n    const [diseases, setDiseases] = useState([]);\r\n    const [toothTreatments, setTreatments] = useState([]);\r\n   // const [notes, setNotes] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (tooth) {\r\n            setName(tooth.name);\r\n            const issues = tooth.issues || [];\r\n            const foundDiseases = issues.filter(\r\n                (issue) => !treatments.includes(issue.name)\r\n            );\r\n            const foundTreatments = issues.filter((issue) =>\r\n                treatments.includes(issue.name)\r\n            );\r\n            setDiseases(foundDiseases);\r\n            setTreatments(foundTreatments);\r\n            //setNotes(tooth.notes || \"Nicio notă suplimentară\");\r\n        }\r\n    }, [tooth]);\r\n\r\n    return (\r\n        <form className=\"patient-form\">\r\n            <h3>Tooth Info</h3>\r\n            <input\r\n                className=\"input-bar\"\r\n                type=\"text\"\r\n                value={toothName}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Tooth Name\"\r\n                required\r\n            />\r\n\r\n            <div className=\"tooth-info\">\r\n                <p>\r\n                    <strong>Issues:</strong>\r\n                </p>\r\n                {diseases.length > 0 ? (\r\n                    <ul className=\"issues-list\">\r\n                        {diseases.map((disease, index) => (\r\n                            <li key={index} className=\"issue-item\">\r\n                                {disease.name}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p className=\"no-issues\">No disease identified</p>\r\n                )}\r\n\r\n                <p>\r\n                    <strong>Treatments:</strong>\r\n                </p>\r\n                {toothTreatments.length > 0 ? (\r\n                    <ul className=\"issues-list\">\r\n                        {toothTreatments.map((treatment, index) => (\r\n                            <li key={index} className=\"tratament-item\">\r\n                                {treatment.name}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p className=\"no-issues\">No treatment identified</p>\r\n                )}\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Tooth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}