{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\40753\\\\source\\\\Facultate\\\\Semestrul_5\\\\ProiectareaProdInovative\\\\DentalIQ_frontend\\\\src\\\\components\\\\Mouth.js\";\nimport React from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { MeshStandardMaterial } from 'three';\n\n// Componentă pentru un dinte mai realist\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tooth({\n  position,\n  scale,\n  color = \"white\"\n}) {\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    scale: scale,\n    children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n      args: [0.3, 0.5, 2, 32]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n// Componentă pentru gingii\n_c = Tooth;\nfunction Gums({\n  position\n}) {\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n      args: [5, 5, 0.5, 64]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"pink\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n// Componenta Mouth\n_c2 = Gums;\nfunction Mouth() {\n  // Configurarea pozițiilor și scalărilor pentru fiecare tip de dinte\n  const upperTeeth = [{\n    position: [-4, 0, 0.5],\n    scale: [0.8, 1.8, 0.8]\n  },\n  // Molari stânga\n  {\n    position: [-3, 0, 0.5],\n    scale: [0.7, 1.5, 0.7]\n  },\n  // Premolari stânga\n  {\n    position: [-2, 0, 0.5],\n    scale: [0.6, 1.3, 0.6]\n  },\n  // Canin stânga\n  {\n    position: [-1, 0, 0.5],\n    scale: [0.5, 1.2, 0.5]\n  },\n  // Incisivi stânga\n  {\n    position: [0, 0, 0.5],\n    scale: [0.5, 1.2, 0.5]\n  },\n  // Incisivi dreapta\n  {\n    position: [1, 0, 0.5],\n    scale: [0.6, 1.3, 0.6]\n  },\n  // Canin dreapta\n  {\n    position: [2, 0, 0.5],\n    scale: [0.7, 1.5, 0.7]\n  },\n  // Premolari dreapta\n  {\n    position: [3, 0, 0.5],\n    scale: [0.8, 1.8, 0.8]\n  } // Molari dreapta\n  ];\n  const lowerTeeth = upperTeeth.map(tooth => ({\n    ...tooth,\n    position: [tooth.position[0], -2, tooth.position[2]] // Poziționare mai joasă\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n        position: [10, 15, 10],\n        angle: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Gums, {\n        position: [0, 0.5, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Gums, {\n        position: [0, -1.5, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 1, 0],\n        children: upperTeeth.map((tooth, index) => /*#__PURE__*/_jsxDEV(Tooth, {\n          position: tooth.position,\n          scale: tooth.scale\n        }, `upper-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, -1, 0],\n        children: lowerTeeth.map((tooth, index) => /*#__PURE__*/_jsxDEV(Tooth, {\n          position: tooth.position,\n          scale: tooth.scale\n        }, `lower-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Mouth;\nexport default Mouth;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Tooth\");\n$RefreshReg$(_c2, \"Gums\");\n$RefreshReg$(_c3, \"Mouth\");","map":{"version":3,"names":["React","Canvas","MeshStandardMaterial","jsxDEV","_jsxDEV","Tooth","position","scale","color","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","Gums","_c2","Mouth","upperTeeth","lowerTeeth","map","tooth","style","padding","display","justifyContent","intensity","angle","index","_c3","$RefreshReg$"],"sources":["C:/Users/40753/source/Facultate/Semestrul_5/ProiectareaProdInovative/DentalIQ_frontend/src/components/Mouth.js"],"sourcesContent":["import React from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { MeshStandardMaterial } from 'three';\r\n\r\n// Componentă pentru un dinte mai realist\r\nfunction Tooth({ position, scale, color = \"white\" }) {\r\n  return (\r\n    <mesh position={position} scale={scale}>\r\n      <cylinderGeometry args={[0.3, 0.5, 2, 32]} /> {/* Lungimea ajustată */}\r\n      <meshStandardMaterial color={color} />\r\n    </mesh>\r\n  );\r\n}\r\n\r\n// Componentă pentru gingii\r\nfunction Gums({ position }) {\r\n  return (\r\n    <mesh position={position}>\r\n      <cylinderGeometry args={[5, 5, 0.5, 64]} />\r\n      <meshStandardMaterial color=\"pink\" />\r\n    </mesh>\r\n  );\r\n}\r\n\r\n// Componenta Mouth\r\nfunction Mouth() {\r\n  // Configurarea pozițiilor și scalărilor pentru fiecare tip de dinte\r\n  const upperTeeth = [\r\n    { position: [-4, 0, 0.5], scale: [0.8, 1.8, 0.8] }, // Molari stânga\r\n    { position: [-3, 0, 0.5], scale: [0.7, 1.5, 0.7] }, // Premolari stânga\r\n    { position: [-2, 0, 0.5], scale: [0.6, 1.3, 0.6] }, // Canin stânga\r\n    { position: [-1, 0, 0.5], scale: [0.5, 1.2, 0.5] }, // Incisivi stânga\r\n    { position: [0, 0, 0.5], scale: [0.5, 1.2, 0.5] },  // Incisivi dreapta\r\n    { position: [1, 0, 0.5], scale: [0.6, 1.3, 0.6] },  // Canin dreapta\r\n    { position: [2, 0, 0.5], scale: [0.7, 1.5, 0.7] },  // Premolari dreapta\r\n    { position: [3, 0, 0.5], scale: [0.8, 1.8, 0.8] },  // Molari dreapta\r\n  ];\r\n\r\n  const lowerTeeth = upperTeeth.map((tooth) => ({\r\n    ...tooth,\r\n    position: [tooth.position[0], -2, tooth.position[2]], // Poziționare mai joasă\r\n  }));\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", display: \"flex\", justifyContent: \"center\" }}> {/* Spațiu adăugat */}\r\n      <Canvas>\r\n        {/* Lumini */}\r\n        <ambientLight intensity={0.7} />\r\n        <spotLight position={[10, 15, 10]} angle={0.3} />\r\n\r\n        {/* Gingii */}\r\n        <Gums position={[0, 0.5, 0]} />\r\n        <Gums position={[0, -1.5, 0]} />\r\n\r\n        {/* Arcada superioară */}\r\n        <group position={[0, 1, 0]}>\r\n          {upperTeeth.map((tooth, index) => (\r\n            <Tooth\r\n              key={`upper-${index}`}\r\n              position={tooth.position}\r\n              scale={tooth.scale}\r\n            />\r\n          ))}\r\n        </group>\r\n\r\n        {/* Arcada inferioară */}\r\n        <group position={[0, -1, 0]}>\r\n          {lowerTeeth.map((tooth, index) => (\r\n            <Tooth\r\n              key={`lower-${index}`}\r\n              position={tooth.position}\r\n              scale={tooth.scale}\r\n            />\r\n          ))}\r\n        </group>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mouth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}