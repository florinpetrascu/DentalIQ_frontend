{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import\"./Patients.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddPatientForm=_ref=>{let{onAddPatient}=_ref;const[firstName,setFirstName]=useState('');const[lastName,setLastName]=useState('');const[phoneNumber,setPhoneNumber]=useState('');const[notification,setNotification]=useState(null);const[notificationType,setNotificationType]=useState(null);// 'error' or 'success'\nconst handleSubmit=async e=>{e.preventDefault();try{const response=await axios.post('/api/patients',{firstName,lastName,phoneNumber});onAddPatient(response.data);// Update state with the newly added patient\nsetNotification('Patient added successfully!');setNotificationType('success');// Clear form fields after successful submission\nsetFirstName('');setLastName('');setPhoneNumber('');}catch(error){if(error.response&&error.response.status===409){setNotification('ERROR: There is another patient with the same name');}else{console.error('Error adding patient:',error);setNotification('Error adding patient. Contact the development team');}setNotificationType('danger');}finally{// Clear notification after 3 seconds in both success and error cases\nsetTimeout(()=>{setNotification(null);setNotificationType(null);},3000);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"patient-form\",children:[notification&&/*#__PURE__*/_jsx(\"div\",{className:`alert alert-${notificationType}`,role:\"alert\",children:notification}),/*#__PURE__*/_jsx(\"input\",{className:\"input-bar\",type:\"text\",value:firstName,onChange:e=>setFirstName(e.target.value),placeholder:\"First Name\",required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"input-bar\",type:\"text\",value:lastName,onChange:e=>setLastName(e.target.value),placeholder:\"Last Name\",required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"input-bar\",type:\"text\",value:phoneNumber,onChange:e=>setPhoneNumber(e.target.value),placeholder:\"Phone Number\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",children:\"Add New Patient\"})]});};export default AddPatientForm;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","AddPatientForm","_ref","onAddPatient","firstName","setFirstName","lastName","setLastName","phoneNumber","setPhoneNumber","notification","setNotification","notificationType","setNotificationType","handleSubmit","e","preventDefault","response","post","data","error","status","console","setTimeout","onSubmit","className","children","role","type","value","onChange","target","placeholder","required"],"sources":["C:/Users/40753/source/Facultate/Semestrul_5/ProiectareaProdInovative/DentalIQ_frontend/src/components/patient/AddPatientForm.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport \"./Patients.css\";\r\n\r\nconst AddPatientForm = ({ onAddPatient }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [notification, setNotification] = useState(null);\r\n  const [notificationType, setNotificationType] = useState(null); // 'error' or 'success'\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/patients', {\r\n        firstName,\r\n        lastName,\r\n        phoneNumber,\r\n      });\r\n\r\n      onAddPatient(response.data); // Update state with the newly added patient\r\n      setNotification('Patient added successfully!');\r\n      setNotificationType('success');\r\n      // Clear form fields after successful submission\r\n      setFirstName('');\r\n      setLastName('');\r\n      setPhoneNumber('');\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 409) {\r\n        setNotification('ERROR: There is another patient with the same name');\r\n      } else {\r\n        console.error('Error adding patient:', error);\r\n        setNotification('Error adding patient. Contact the development team');\r\n      }\r\n      setNotificationType('danger');\r\n    } finally {\r\n      // Clear notification after 3 seconds in both success and error cases\r\n      setTimeout(() => {\r\n        setNotification(null);\r\n        setNotificationType(null);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"patient-form\">\r\n\r\n      {notification && (\r\n        <div className={`alert alert-${notificationType}`} role=\"alert\">\r\n          {notification}\r\n        </div>\r\n      )}\r\n\r\n      <input\r\n        className=\"input-bar\"\r\n        type=\"text\"\r\n        value={firstName}\r\n        onChange={(e) => setFirstName(e.target.value)}\r\n        placeholder=\"First Name\"\r\n        required\r\n      />\r\n\r\n      <input\r\n        className=\"input-bar\"\r\n        type=\"text\"\r\n        value={lastName}\r\n        onChange={(e) => setLastName(e.target.value)}\r\n        placeholder=\"Last Name\"\r\n        required\r\n      />\r\n\r\n      <input\r\n        className=\"input-bar\"\r\n        type=\"text\"\r\n        value={phoneNumber}\r\n        onChange={(e) => setPhoneNumber(e.target.value)}\r\n        placeholder=\"Phone Number\"\r\n        required\r\n      />\r\n\r\n      <button type=\"submit\" className=\"submit-button\">Add New Patient</button>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default AddPatientForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}