{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useParams,useLocation}from'react-router-dom';import\"./Patients.css\";import Tooth from\"./Tooth\";import\"./Patient.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Patient=()=>{var _location$state;const{id}=useParams();const location=useLocation();let patient=(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.patient;const[firstName,setFirstName]=useState('');const[lastName,setLastName]=useState('');const[phoneNumber,setPhoneNumber]=useState('');const[selectedTooth,setSelectedTooth]=useState(null);// Dintele selectat\nconst[teeth,setTeeth]=useState([]);const[imageFile,setImageFile]=useState(null);// Fișierul de imagine\nconst[previewImage,setPreviewImage]=useState(null);// Imaginea pentru previzualizare\nconst[patientHere,setPatientHere]=useState(patient);const[hoveredTooth,setHoveredTooth]=useState(null);const[isSubmitting,setIsSubmitting]=useState(false);// eslint-disable-next-line\nuseEffect(()=>{console.log(\"useEffect\");if(patientHere){setFirstName(patientHere.firstName);setLastName(patientHere.lastName);setPhoneNumber(patientHere.phoneNumber);setTeeth(patientHere.teeths);if(patientHere.image){setPreviewImage(`data:image/jpeg;base64,${patientHere.image}`);}}else{// Fetch patient data from API if not passed through state\nfetch(`/api/patients/${id}`).then(res=>res.json()).then(data=>{setFirstName(data.firstName);setLastName(data.lastName);setPhoneNumber(data.phoneNumber);}).catch(error=>console.error(\"Error fetching patient:\",error));}},[patientHere]);const handleImageUpload=event=>{const file=event.target.files[0];setImageFile(file);// Creează o previzualizare locală a imaginii\nconst reader=new FileReader();reader.onload=e=>setPreviewImage(e.target.result);reader.readAsDataURL(file);};const handleSubmit=async e=>{e.preventDefault();if(!imageFile){alert(\"Please upload an image before submitting.\");return;}setIsSubmitting(true);// Dezactivează formularul și afișează spinner-ul\n// Encodează imaginea în Base64\nconst reader=new FileReader();reader.onload=async()=>{const imageBase64=reader.result.split(',')[1];// Extrage doar partea Base64\nconst payload={patient_data:{id,firstName,lastName,phoneNumber,teeth},image:imageBase64};try{const response=await fetch(\"/api/upload\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});const data=await response.json();console.log(\"Server response:\",data);setPatientHere(data);}catch(error){console.error(\"Error uploading patient:\",error);}finally{setIsSubmitting(false);}};reader.readAsDataURL(imageFile);};const handleToothClick=tooth=>{console.log(`Teeth clicked`);console.log(tooth);setSelectedTooth(tooth);};const handleToothHover=toothName=>{console.log(`Teeth hover start`);console.log(toothName);setHoveredTooth(toothName);// Setează dintele curent\n};const handleToothHoverEnd=()=>{console.log(`Teeth hover end`);console.log(hoveredTooth);setHoveredTooth(null);// Resetează dintele curent\n};return/*#__PURE__*/_jsxs(\"div\",{className:`main-content ${isSubmitting?\"disabled\":\"\"}`,children:[isSubmitting&&/*#__PURE__*/_jsx(\"div\",{className:\"spinner-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"left-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart_img\",children:Array.from({length:32},(_,index)=>{const toothNumber=index+1;const tooth=teeth.find(t=>t.name===toothNumber.toString());const isExisting=teeth.some(tooth=>tooth.name===toothNumber.toString());// Verifică dacă toothNumber este egal cu tooth.name\nreturn/*#__PURE__*/_jsx(\"button\",{className:`teeth_buton  ${isExisting?\"isExisting\":\"isMissing\"} teeth_buton${toothNumber}`,onClick:()=>handleToothClick(tooth),onMouseEnter:()=>handleToothHover(toothNumber.toString()),onMouseLeave:handleToothHoverEnd,disabled:isSubmitting,children:`${toothNumber}`},index);})}),/*#__PURE__*/_jsx(\"div\",{children:previewImage&&/*#__PURE__*/_jsxs(\"div\",{className:\"image-preview-wrapper\",children:[/*#__PURE__*/_jsx(\"img\",{src:previewImage,alt:\"Preview\",className:\"image-preview\"}),teeth.map((tooth,index)=>{const points=JSON.parse(tooth.polygon).map(_ref=>{let[x,y]=_ref;return`${x/10}% ${y/10}%`;})// Normalizează punctele pentru proporții relative\n.join(\", \");// const points = \"0% 0%, 100% 0%, 50% 100% ,30% 70% ,50% 20%\";\nconsole.log(\"points\");console.log(points);return/*#__PURE__*/_jsx(\"div\",{//className={\"tooth-polygon\"}\nclassName:`tooth-polygon ${hoveredTooth===tooth.name?\"visible\":\"\"}`,style:{position:\"absolute\",// Permite poziționarea relativă față de imagine\ntop:\"60px\",// Ajustează poziția în funcție de imaginea ta\nleft:\"35px\",// Ajustează poziția în funcție de imaginea ta\nwidth:\"1650px\",height:\"1400px\",// backgroundColor: \"green\",  // Fundal pentru a face poligonul vizibil\nclipPath:`polygon(${points})`,// Poligon triunghiular\nzIndex:10// Asigură-te că poligonul apare deasupra imaginii\n}},index);})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"right-content\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"patient-form\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"input-bar\",type:\"text\",value:firstName,onChange:e=>setFirstName(e.target.value),placeholder:\"First Name\",required:true,disabled:isSubmitting}),/*#__PURE__*/_jsx(\"input\",{className:\"input-bar\",type:\"text\",value:lastName,onChange:e=>setLastName(e.target.value),placeholder:\"Last Name\",required:true,disabled:isSubmitting}),/*#__PURE__*/_jsx(\"input\",{className:\"input-bar\",type:\"text\",value:phoneNumber,onChange:e=>setPhoneNumber(e.target.value),placeholder:\"Phone Number\",required:true,disabled:isSubmitting}),/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",type:\"file\",accept:\"image/*\",className:\"hidden-input\",onChange:handleImageUpload,disabled:isSubmitting}),/*#__PURE__*/_jsx(\"label\",{type:\"upload\",htmlFor:\"file-upload\",className:\"submit-button upload\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text_upload\",children:\"X-ray Upload \"})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button send\",onClick:handleSubmit,disabled:isSubmitting,children:isSubmitting?\"Loading...\":\"AI Scan\"})]}),selectedTooth?/*#__PURE__*/_jsx(Tooth,{tooth:selectedTooth}):/*#__PURE__*/_jsx(\"p\",{className:\"tratament-item\",children:\"Select a tooth to see details.\"})]})]});};export default Patient;","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","Tooth","jsx","_jsx","jsxs","_jsxs","Patient","_location$state","id","location","patient","state","firstName","setFirstName","lastName","setLastName","phoneNumber","setPhoneNumber","selectedTooth","setSelectedTooth","teeth","setTeeth","imageFile","setImageFile","previewImage","setPreviewImage","patientHere","setPatientHere","hoveredTooth","setHoveredTooth","isSubmitting","setIsSubmitting","console","log","teeths","image","fetch","then","res","json","data","catch","error","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","handleSubmit","preventDefault","alert","imageBase64","split","payload","patient_data","response","method","headers","body","JSON","stringify","handleToothClick","tooth","handleToothHover","toothName","handleToothHoverEnd","className","children","Array","from","length","_","index","toothNumber","find","t","name","toString","isExisting","some","onClick","onMouseEnter","onMouseLeave","disabled","src","alt","map","points","parse","polygon","_ref","x","y","join","style","position","top","left","width","height","clipPath","zIndex","onSubmit","type","value","onChange","placeholder","required","accept","htmlFor"],"sources":["C:/Users/40753/source/Facultate/Semestrul_5/ProiectareaProdInovative/DentalIQ_frontend/src/components/patient/Patient.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {useParams, useLocation} from 'react-router-dom';\r\nimport \"./Patients.css\";\r\nimport Tooth from \"./Tooth\";\r\nimport \"./Patient.css\" ;\r\n\r\n\r\nconst Patient = () => {\r\n\r\n    const { id } = useParams();\r\n    const location = useLocation();\r\n    let patient = location.state?.patient;\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [selectedTooth, setSelectedTooth] = useState(null); // Dintele selectat\r\n    const [teeth, setTeeth] = useState([]);\r\n    const [imageFile, setImageFile] = useState(null); // Fișierul de imagine\r\n    const [previewImage, setPreviewImage] = useState(null); // Imaginea pentru previzualizare\r\n    const [patientHere,setPatientHere] = useState(patient)\r\n    const [hoveredTooth, setHoveredTooth] = useState(null);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        console.log(\"useEffect\");\r\n        if (patientHere) {\r\n            setFirstName(patientHere.firstName);\r\n            setLastName(patientHere.lastName);\r\n            setPhoneNumber(patientHere.phoneNumber);\r\n            setTeeth(patientHere.teeths);\r\n            if (patientHere.image) {\r\n                setPreviewImage(`data:image/jpeg;base64,${patientHere.image}`);\r\n            }\r\n\r\n        } else {\r\n            // Fetch patient data from API if not passed through state\r\n            fetch(`/api/patients/${id}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setFirstName(data.firstName);\r\n                    setLastName(data.lastName);\r\n                    setPhoneNumber(data.phoneNumber);\r\n                })\r\n                .catch(error => console.error(\"Error fetching patient:\", error));\r\n        }\r\n    }, [patientHere]);\r\n\r\n    const handleImageUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        setImageFile(file);\r\n\r\n        // Creează o previzualizare locală a imaginii\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => setPreviewImage(e.target.result);\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!imageFile) {\r\n            alert(\"Please upload an image before submitting.\");\r\n            return;\r\n        }\r\n        setIsSubmitting(true); // Dezactivează formularul și afișează spinner-ul\r\n        // Encodează imaginea în Base64\r\n        const reader = new FileReader();\r\n        reader.onload = async () => {\r\n            const imageBase64 = reader.result.split(',')[1]; // Extrage doar partea Base64\r\n\r\n            const payload = {\r\n                patient_data: { id,firstName, lastName, phoneNumber, teeth },\r\n                image: imageBase64\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(\"/api/upload\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(payload)\r\n                });\r\n\r\n\r\n                const data = await response.json();\r\n                console.log(\"Server response:\", data);\r\n\r\n                setPatientHere(data);\r\n            } catch (error) {\r\n                console.error(\"Error uploading patient:\", error);\r\n            }\r\n            finally {\r\n                setIsSubmitting(false);\r\n            }\r\n        };\r\n        reader.readAsDataURL(imageFile);\r\n    };\r\n\r\n    const handleToothClick = (tooth) => {\r\n        console.log(`Teeth clicked`);\r\n\r\n        console.log(tooth);\r\n\r\n        setSelectedTooth(tooth);\r\n\r\n    };\r\n\r\n    const handleToothHover = (toothName) => {\r\n        console.log(`Teeth hover start`);\r\n        console.log(toothName);\r\n        setHoveredTooth(toothName); // Setează dintele curent\r\n    };\r\n\r\n    const handleToothHoverEnd = () => {\r\n        console.log(`Teeth hover end`);\r\n        console.log(hoveredTooth);\r\n        setHoveredTooth(null); // Resetează dintele curent\r\n    };\r\n\r\n    return (\r\n        <div className={`main-content ${isSubmitting ? \"disabled\" : \"\"}`}>\r\n            {isSubmitting && (\r\n                <div className=\"spinner-container\">\r\n                    <div className=\"spinner\"></div>\r\n                </div>\r\n            )}\r\n            <div className='left-content'>\r\n\r\n                    <div className=\"chart_img\">\r\n\r\n\r\n\r\n                        {/* Crearea butoanelor din 1 până la 32 */}\r\n                        {Array.from({ length: 32 }, (_, index) => {\r\n                            const toothNumber = index + 1;\r\n                            const tooth = teeth.find((t) => t.name === toothNumber.toString());\r\n                            const isExisting = teeth.some((tooth) => tooth.name === toothNumber.toString()); // Verifică dacă toothNumber este egal cu tooth.name\r\n\r\n                            return (\r\n                                <button\r\n                                    key={index}\r\n                                    className={`teeth_buton  ${isExisting ? \"isExisting\" : \"isMissing\"} teeth_buton${toothNumber}`}\r\n                                    onClick={() => handleToothClick(tooth)}\r\n                                    onMouseEnter={() => handleToothHover(toothNumber.toString())}\r\n                                    onMouseLeave={handleToothHoverEnd}\r\n                                    disabled={isSubmitting}\r\n                                >\r\n                                 {`${toothNumber}`}\r\n                                </button>\r\n                            );\r\n                        })}\r\n\r\n                    </div>\r\n\r\n                {/* Imaginea panoramică */}\r\n                <div >\r\n                    {previewImage && (\r\n                        <div  className=\"image-preview-wrapper\">\r\n                            <img src={previewImage} alt=\"Preview\" className=\"image-preview\" />\r\n\r\n                            {/* Poligoane pentru fiecare dinte */}\r\n                            {teeth.map((tooth, index) => {\r\n\r\n                                const points = JSON.parse(tooth.polygon)\r\n                                    .map(([x, y]) => `${x / 10}% ${y / 10}%`) // Normalizează punctele pentru proporții relative\r\n                                    .join(\", \");\r\n                               // const points = \"0% 0%, 100% 0%, 50% 100% ,30% 70% ,50% 20%\";\r\n                                console.log(\"points\")\r\n                                console.log(points)\r\n                                return (\r\n                                    <div\r\n                                        key={index}\r\n                                        //className={\"tooth-polygon\"}\r\n                                        className={`tooth-polygon ${hoveredTooth === tooth.name ? \"visible\" : \"\"}`}\r\n                                        style={{\r\n                                            position: \"absolute\",  // Permite poziționarea relativă față de imagine\r\n                                            top: \"60px\",  // Ajustează poziția în funcție de imaginea ta\r\n                                            left: \"35px\",  // Ajustează poziția în funcție de imaginea ta\r\n                                            width: \"1650px\",\r\n                                            height: \"1400px\",\r\n                                            // backgroundColor: \"green\",  // Fundal pentru a face poligonul vizibil\r\n                                            clipPath: `polygon(${points})`,  // Poligon triunghiular\r\n                                            zIndex: 10  // Asigură-te că poligonul apare deasupra imaginii\r\n                                        }}\r\n                                    ></div>\r\n                                );\r\n                            })}\r\n\r\n                                   {/*<div*/}\r\n\r\n                                   {/*     className={`cover-image ${hoveredTooth != null ? \"visible\" : \"\"}` }*/}\r\n                                   {/*      style={{*/}\r\n                                   {/*         position: \"absolute\",*/}\r\n                                   {/*         zIndex: 10*/}\r\n                                   {/*     }}*/}\r\n                                   {/*></div>*/}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/*<div>*/}\r\n                {/*    {previewImage && <img src={previewImage} alt=\"Preview\" className=\"image-preview\" />}*/}\r\n                {/*</div>*/}\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            {/* Partea dreaptă - Detalii dinte */}\r\n            <div className=\"right-content\">\r\n                <form onSubmit={handleSubmit} className=\"patient-form\">\r\n\r\n                        <input\r\n                            className=\"input-bar\"\r\n                            type=\"text\"\r\n                            value={firstName}\r\n                            onChange={(e) => setFirstName(e.target.value)}\r\n                            placeholder=\"First Name\"\r\n                            required\r\n                            disabled={isSubmitting}\r\n                        />\r\n                        <input\r\n                            className=\"input-bar\"\r\n                            type=\"text\"\r\n                            value={lastName}\r\n                            onChange={(e) => setLastName(e.target.value)}\r\n                            placeholder=\"Last Name\"\r\n                            required\r\n                            disabled={isSubmitting}\r\n                        />\r\n                        <input\r\n                            className=\"input-bar\"\r\n                            type=\"text\"\r\n                            value={phoneNumber}\r\n                            onChange={(e) => setPhoneNumber(e.target.value)}\r\n                            placeholder=\"Phone Number\"\r\n                            required\r\n                            disabled={isSubmitting}\r\n                        />\r\n\r\n\r\n                    <input id=\"file-upload\" type=\"file\" accept=\"image/*\"  className=\"hidden-input\" onChange={handleImageUpload} disabled={isSubmitting}/>\r\n\r\n                    <label type=\"upload\" htmlFor=\"file-upload\" className=\"submit-button upload\">\r\n                        <p className=\"text_upload\">X-ray Upload </p>\r\n                    </label>\r\n\r\n                    <button type=\"submit\" className=\"submit-button send\" onClick={handleSubmit} disabled={isSubmitting}>\r\n                        {isSubmitting ? \"Loading...\" : \"AI Scan\"}\r\n                    </button>\r\n\r\n                </form>\r\n\r\n\r\n\r\n\r\n                {selectedTooth ? (\r\n                    <Tooth tooth={selectedTooth} />\r\n                ) : (\r\n                    <p className=\"tratament-item\">Select a tooth to see details.</p>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Patient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}